version=pmwiki-2.0.beta55 ordered=1
newline=²
agent=Mozilla/5.0 (Windows; U; Win98; en-US; rv:1.7.8) Gecko/20050511 Firefox/1.0.4
author=HaganFox
host=216.161.175.221
name=PmWiki.Functions
rev=30
targets=Cookbook.Functions,PmWiki.PmWiki,Profiles.JoachimDurchholz,PmWikiFunctions.FmtPageName,Profiles.BenWilson,PmWiki.Variables,PmWiki.Internationalizations,PmWiki.FmtPageName,PmWiki.CustomMarkup
text=This page describes some of the internal workings of PmWiki by explaining how some of the functions in pmwiki.php work. For a more brief list/overview on functions useful to for instance cookbook writers, see [[Cookbook.Functions]]. You might also want to look at the [[latest CVS version of pmwiki.php -> http://cvs.sourceforge.net/viewcvs.py/pmwiki/pmwiki/pmwiki.php?view=markup]].²²%red%Somebody please merge this description with what's already on Cookbook.Functions, and turn this page into a redirect to Cookbook.Functions. (I'm currently too busy fixing something else.) [[~Joachim Durchholz]]%%²²%purple%I (Christian) disagree :-)  As I see it, [[Cookbook.Functions]]  \²'''briefly''' \²describes functions that might be useful for administrators and cookbook \²authors, whereas \²this page is intended to describe PmWiki functions in greater detail. \\²In other words, this page may contain all the scary details as well \²as describe functions that most (all) cookbook authors don't care about. \\²I could go for renaming this page however, e.g. "Internal Functions, or \²even putting it an separate group called PmWikiFunctions.FmtPageName.%%²²%green%Put PmWiki standard functions here with brief explanations (per Pm email). Overly-documented functions get their own page (where possible). [[~BenWilson]] August 02, 2005, at 02:15 PM²²!![[#FmtPageName]] [@FmtPageName@]($fmt, $pagename)²²-> \²[[#FmtPageName-desc]]Returns [@$fmt@], with $variable and $[internationalisation] substitutions performed, under the assumption that the current page is [@pagename@]. See [[PmWiki.Variables]] for an (incomplete) list of available variables, [[PmWiki.Internationalizations]] for internationalisation.²²This is one of the major functions in PmWiki, see [[PmWiki.FmtPageName]] for²lots of details.²²²!![[#Markup]] [@Markup@]($name, $when, $pattern, $replace)²²-> \²[[#Markup-desc]]Adds a new markup to the conversion table.  Described in greater detail at PmWiki.CustomMarkup.²²This function is used to insert translation rules into the PmWiki's²translation engine. The arguments to [@Markup()@] are all strings, where:²²:[@$name@]: The string names the rule that is inserted. It must be \²  unique (?? and is used partially controls the order in which the \²  rules are applied).²-> %red%What happens if the name isn't unique??%%²:[@$when@]: This string is used to primarily control ''when'' \²  a rule is to be applied. See ??? for more details on the order of rules.²:[@$pattern@]: This string is a [[regular expression \²   -> http://www.php.net/preg_replace]] that is used by the translation \²  engine to look for occurences of this rule in the markup source.²:[@$replace@]: This string will replace the matched text when a match \²  occurs.²²Also see: [[PmWiki.CustomMarkup]] and [[Cookbook.Functions#Markup]]²²!![[#MarkupToHTML]] [@MarkupToHTML@]($pagename, $str)²²-> \²[[#MarkupToHTML-desc]] Converts the string [@$str@] containing PmWiki markup into the corresponding HTML code, assuming the current page is [@$pagename@].²²Also see: [[Cookbook.Functions#MarkupToHTML]]²²!![[#mkdirp]] [@mkdirp@]($dir)²²The function [@mkdirp@]($dir) creates a directory, [@$dir@], if it doesn't²already exist, including any parent directories that might be needed.  For²each directory created, it checks that the permissions on the directory are²sufficient to allow PmWiki scripts to read and write files in that²directory.  This includes checking for restrictions imposed by PHP's²safe_mode setting.  If [@mkdirp@]() is unable to successfully create a²read/write directory, [@mkdirp@]() aborts with an error message telling the²administrator the steps to take to either create $dir manually or give²PmWiki sufficient permissions to be able to do it.²²Code of [@mkdirp@]() taken from version  pmwiki-2.0.beta55 (current is {$Version}):²²-> [@²## mkdirp creates a directory and its parents as needed, and sets²## permissions accordingly.²function mkdirp($dir) {²  global $ScriptUrl;²  if (file_exists($dir)) return;²  if (!file_exists(dirname($dir))) mkdirp(dirname($dir));²  if (mkdir($dir, 0777)) {²    fixperms($dir);²    if (@touch("$dir/xxx")) { unlink("$dir/xxx"); return; }²    rmdir($dir);²  }²  $parent = realpath(dirname($dir));²  $perms = decoct(fileperms($parent) & 03777);²  $msg = "PmWiki needs to have a writable <tt>$dir/</tt> directory²    before it can continue.  You can create the directory manually²    by executing the following commands on your server:²    <pre>    mkdir $parent/$dir\n    chmod 777 $parent/$dir</pre>²    Then, <a href='$ScriptUrl'>reload this page</a>.";²  $safemode = ini_get('safe_mode');²  if (!$safemode) $msg .= "<br /><br />Or, for a slightly more²    secure installation, try executing <pre>    chmod 2777 $parent</pre>²    on your server and following <a target='_blank' href='$ScriptUrl'>²    this link</a>.  Afterwards you can restore the permissions to²    their current setting by executing <pre>    chmod $perms $parent</pre>.";²  Abort($msg);²}²@]
time=1125106435
