version=pmwiki-2.0.devel13
newline=²
text=See also the MarkupMasterIndex.²²PmWiki uses the markup sequence [@(:directive ...:)@] for a number of directives and text substitutions.  Many of these replace the "double-bracket" directives that were used in PmWiki 0.6 and earlier versions.  Here's a brief description of each.²²[[#title]][@(:title text:)@]²->Sets a page's title to be something other than the name of the page.  For example, the markup²²    [=(:title Patrick's home page:)=]²²->uses "Patrick's home page" as the title of the page in the browser title bar (HTML <title> tag) and the title area of the page ($PageTitle variable).  Note that apostrophes and other special characters can be used here.²²²[[#keywords]][@(:keywords word, ...:)@]²->Sets page keywords in an HTML @@<meta name='keywords' content='word, ...' />@@ tag.²²[[#include]][@(:include PageName:)@] and [@(:include PageName#start#end:)@]²->Includes the contents of another page into the text of the current page.  The second form of the include is used to include only the portion of the page between the #start and #end anchors.  #start and #end can be numeric, in which case they refer to line numbers within the page, so that [@(:include RecentChanges#1#10:)@] grabs only the first ten lines of the RecentChanges file.²²[[#noheader]][@(:noheader:)@], [@(:nofooter:)@], [@(:notitle:)@], etc.²->These directives disable the header, footer, and page title portions of a page's layout (if the page's skin allows it).²²²[@(:(no)spacewikiwords:)@]²->Turns on (off) automatic spacing of WikiWords within the page text.  When on, `WikiWord will be displayed as "Wiki Word".²²[@(:(no)linkwikiwords:)@]²->Turns on (off) automatic linking of WikiWords to pages of the same name.²²[[#if]][@(:if cond param]@]²->The [@(:if cond param:)@] syntax allows portions of the markup text to be conditionally processed (up to the next [@(:if:)@]) depending on administrator-defined conditions.  In pmwiki.2.0.devel13 the only defined condition is "[@false@]" (which causes the markup text to be ignored, like a comment), but the admin can define other conditions in the [@$Conditions@]-array.²²->The generic form of the [@(:if:)@] directive is²²-->[@(:if cond param:)@]²²->where "[@cond@]" names a condition to be tested from the $Conditions array, and "[@param@]" is a parameter or other argument held in $condparm in the test.  For example, the following (in config.php) adds [@(:if group GroupName:)@] as a markup:²²-->[@$Conditions['group'] = $FmtPageName('\$Group',\$pagename)==\$condparm";@]²²->One could then use the following markup:²²-->[@(:if group PmWiki:)@] This text only appears in the group "PmWiki"[@(:if:)@]²²->The negated form of [@(:if:)@] is automatically handled as well, thus:²²-->[@(:if ! group PmWiki:)@] This text appears everywhere *but* in group "PmWiki"[@(:if:)@]²²²->Any [@(:if:)@] automatically terminates the previous one, thus markup can be easily cased:²²-->[@(:if group PmWiki:)@] Do this in PmWiki group²-->[@(:if group Main:)@] Do something else for Main²-->[@(:if:)@] This happens in all groups²²->All that remains now is to come up with a good set of [@$Conditions@]. Testing for group membership is a good one, we might also want to create something for generic pagename pattern matches²²-->[@(:if match ^PmWiki\. :)@] Only appears in the PmWiki group²-->[@(:if match RecentChanges$ :)@]  Everywhere except RecentChanges pages²-->[@(:if ! match ^(Main|PmWiki)\. :)@] All groups except Main and PmWiki²-->[@(:if:)@]again - all groups²²->[@$Conditions@] could also be conditional on other items; e.g., date or time, day of week, etc.²²->[-(added from maillist)-]²²%trail%<<|PmWiki.DocumentationIndex|>>²
time=1098284104
name=PmWiki.Directives
host=216.7.163.171
agent=pmwikiedit
rev=10
targets=PmWiki.MarkupMasterIndex,PmWiki.PmWiki,PmWiki.RecentChanges,PmWiki.WikiWords,PmWiki.WikiStructure,PmWiki.DocumentationIndex
author=Pm
